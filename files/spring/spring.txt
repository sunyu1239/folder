spring容器，springMVC容器，tomcat容器：
springMVC容器和spring容器，就是管理bean对象的地方，再说的直白点，springmvc就是管理controller对象的容器，spring就是管理service和dao的容器。
在springmvc的配置文件里配置的扫描路径就是controller的路径，而spring的配置文件里自然配的就是service和dao的路径。
 spring容器和springmvc容器的关系是父子容器的关系。spring容器是父容器，springmvc是子容器。在子容器里可以访问父容器里的对象，
 但是在父容器里不可以访问子容器的对象，说的通俗点就是，在controller里可以访问service对象，但是在service里不可以访问controller对象。
 web容器是管理servlet，以及监听器(Listener)和过滤器(Filter)的。这些都是在web容器的掌控范围里。但他们不在spring和springmvc的掌控范围里。因此，我们无法在这些类中直接使用Spring注解的方式来注入我们需要的对象，是无效的，
web容器是无法识别的。
但我们有时候又确实会有这样的需求，比如在容器启动的时候，做一些验证或者初始化操作，这时可能会在监听器里用到bean对象；又或者需要定义一个过滤器做一些拦截操作，也可能会用到bean对象。
那么在这些地方怎么获取spring的bean对象呢？下面我提供两个方法：
1、

public void contextInitialized(ServletContextEvent sce) {
　　ApplicationContext context = (ApplicationContext) sce.getServletContext().getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE); 
　　UserService userService = (UserService) context.getBean("userService");
}
 

2、

public void contextInitialized(ServletContextEvent sce) {
　　WebApplicationContext webApplicationContext = WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext()); 
　　UserService userService = (UserService) webApplicationContext.getBean("userService"); 
}

以上代码有一个前提，那就是servlet容器在实例化ConfigListener并调用其方法之前，要确保spring容器已经初始化完毕！而spring容器的初始化也是由Listener（ContextLoaderListener）完成，因此只需在web.xml中先配置初始化spring容器的Listener，然后在配置自己的Listener。


spring 是改善其他框架架构的框架。
spring 基本特征： dao/orm/aop/jee/web/core
基于core架构多层JavaEE系统的框架，主要目的简化开发。
core :the ioc container
springioc : 控制反转：把对象的创建,初始化，销毁等工作交给spring容器来做。spring容器控制对象的生命周期。
把一个类放入spring容器中，该类就是bean。<bean> id唯一标识，class类名。
ApplicationContext 接口就是spring容器的最上层接口。
spring容器创建对象的三种方式：
1.<bean id='' class=''>  spring容器直接根据bean的id来创建。这种方式是默认构造方式，因为是直接实例化对象本身。
2.静态工厂方式，<bean id='' class='工厂' factory-method='创建对象的静态方法'>。spring容器直接根据bean的id调用工厂类中的静态方法创建对象。
3.实例化工厂方式，<bean id='工厂' class='工厂' >
<bean id='' factory-bean='上面的id工厂' factory-method='工厂方法'> 。spring容器根据id=''生成工厂实例，并且调用工厂方法，生成想要创建的对象.
开发时大部分使用方式1，方式2,3一般调用其他框架时使用。

spring别名：<bean id=''>
<bean name='id' alias=''>
给bean的id起别名，spring容器既可以根据id，又可以根据alias别名来创建对象。

spring创建对象的时间：默认情况下，启动spring容器的时候，对象就创建了。


