eclipse目录下的plugins：
每一个plug-in都用一个目录包起来, 而且起目录名也是有讲究的,比如plug-in的名字叫
edu.sjtu.bbs.eclipse,版本是1.0.0, 那这个目录名就是edu.sjtu.bbs.eclipse_1.0.0.
而且随便打开一个plugin目录,可以发现总有一个文件叫一个叫plugin.xml,这个文件对
于plugin来说十分重要, 它相当于定义了plugin的运行参数,没有这个,plugin无法启动,
就像你家的电冰箱如果不知道是用110V还是220V的,你也不敢乱往插座上插,所以总要有
个说明,这个说明就是plugin.xml.
features：
feature是功能部件,它里面没有实际的运行的库,它只是eclipse用来管理plugins的一种
途径. 比如你家装了电灯,总要有开关控制把,比如大堂的灯有一个开关控制, 卧室的灯
也有一个开关控制, 它们分别用来控制灯的亮与灭.同样,功能部件就是用来控制插件的启动与否. eclipse的update透视图可以设定各个功
能部件的启用或禁用状态, 所以你可以通过禁用功能部件,来禁止插件的启动. 这样有一
个好处,比如你装了很多插件在eclipse上,但是装的越多,加载就越多,启动也会变慢。
如果plugins目录有插件没有被任何一个功能部件包络的话, 我称之为"野插件", 就是eclipse
启动,它也一定会启动, 就相当于没有开关, 电源一直连通一样.

eclipse禁用插件：
window->preferences->general->Startup and shutdown ,去掉勾选即可。

eclipse删除安装插件的记录：
window->preference->install/update->available software sites.

eclipse 项目转换：
项目右击->propertites->project facets
eclipse javaWeb项目部署哪些到服务器中（例如：tomcat）
项目右击->propertites->deployment assembly

eclipse格式化：
window->perference->java->Code Style->formatter
点击edit,选项作用如下：
1.Indentation缩进
Tab policy指定是否可以使用Tab键，有Spaces only（只支持空格键），Tabs only（只支持Tab键）和Mixed（同时支持空格键和Tab键）。
为了保证代码在不同IDE和运行环境的兼容性和一致性，强烈建议选择Spaces only。Indentation size指定每次缩进多少个空格，Tab size指定一个Tab键相当于多少个空格。
在Spaces only情况下，按Tab键，会自动转化成对应数量的空格。Align fields in columns指定属性是否按列对齐。Indent框中指定Java Code中常见元素是否缩进。
2.Braces大括号
Braces positions指定Java Code中一些元素的大括号的位置，大概有Same line（同行），Next line（下行），Next line indented（下行缩进）等选择。
3.White Space空格
控制在Declarations、Control statements、Expressions、Arrays和Parameterized types这几类元素中的相应位置插入空格。
4.Blank Lines空行
控制class文件中元素之间空行的数量，基本上采用默认值。
5.New Lines新行
控制class文件中元素是否插入新的一行。
6.Control Statements控制语句
控制像if和else，do和while，以及try、catch和finally成套的控制关键字的位置。
7.Line Wrapping换行
Maximum line width控制每行的最大字符数。
Default indentation for wrapped lines指定换行时缩进多少个空格。
还可以详细控制class各元素是否换行。
8.Comments注释
对各种注释（包括文件头注释，行注释，块注释，Javadoc注释）进行格式设置。

Save Actions设置
进行Formatter设置后，你就可以使用Ctrl + Shift + F或者Source -> Format格式化选择的代码。
其实，还有一种更好的方法，在每次写完代码并保存class文件的时候，自动格式化该文件的代码。选择Window -> Preferences -> Java -> Editor -> Save Actions
选择“Perform the selected actions on save”以及下面的三个复选框，其中“Format source code”就是根据前面设置的Formatter对Save文件中的代码进行自动格式化，
可以选择仅针对修改过的代码还是针对所有代码。“Additional actions”是添加一些Save时的额外操作，可以点击“Configure...”按钮对额外操作进行设置，如下：
1.Code Organizing代码组织
可以设置删除末尾的空格，正确的缩进，以及对成员进行排序。
2.Code Style代码风格
可以设置控制语句和表达式，最重要的是还可以设置所有的parameter为final。
3.Member Access成员访问
设置是否需要this来访问非static的属性和方法，同时也可以设置static的属性和方法
4.Missing Code遗漏代码
设置是否是否补齐遗漏的“@Override”和“@Deprecated”。
5.Unnecessary Code不必要代码
删除不必要的代码，例如：没用的import，没用的private成员，没用的local变量等。

