端口是TCP/IP协议中的概念，描述的是TCP协议上层的应用（FTP，HTTP，SMTP…），在操作系统中，可以理解为基于TCP的系统服务或者说系统进程！
如下图，FTP就需要占用特定的TCP端口。TCP/IP 协议栈的实现在系统层，HTTP，FTP 在应用层，因此每个端口都要关联到一个进程上！
（个人理解：端口号是tcp/ip层的东西，不过是服务于应用层的东西，应用层的进程通过socket操作端口号port。进程和端口号之间是没有必然的联系的）

socket是网络编程中的概念，是 TCP/IP 协议栈在操作系统中的代理，为应用层提供服务。（个人理解：应用层操作tcp/ip层用到的技术，应用程序是进程，进程操作socket来控制下层tcp/ip）。

每个进程，在内核中都有一个表，保存了该进程申请并占用的所有 socket 描述符，在进程看来，socket 其实跟文件也没有什么不同，只不过通过描述符获得的对象不同而已，接口对应的系统调用也不同。

那么进程跟socket是一一对应的吗？
其实不然，socket是一种资源，就像文件一样，一个进程打开了，另一个进程也可以用，只不过socket比较特殊而已。
理论上，能够通过 sendmsg 将 socket 描述符传递给其他进程，这样其他进程就可以调用该描述符的接口了。这种场景确实不怎么会用到，也没有进行实际验证。
当然，父子进程间，还有线程间，进行 socket 的共享，是比较常见的。

socket 的本质是一种资源，它包含了端到端的四元组信息，用来标识数据包的归属。因此，尽管 tcp 协议的端口号只有 65535 个，但是进程可拥有的 socket 数据却不限于此（受限于进程最大文件描述符数据）；



