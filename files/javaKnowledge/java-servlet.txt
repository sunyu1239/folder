Servlet简介
Servlet是sun公司提供的一门用于开发动态web资源的技术。
Sun公司在其API中提供了一个servlet接口，用户若想用发一个动态web资源(即开发一个Java程序向浏览器输出数据)，需要完成以下2个步骤：
1、编写一个Java类，实现servlet接口。
2、把开发好的Java类部署到web服务器中。
按照一种约定俗成的称呼习惯，通常我们也把实现了servlet接口的java程序，称之为Servlet。

Servlet的运行过程
Servlet程序是由WEB服务器调用，web服务器收到客户端的Servlet访问请求后：
①Web服务器首先检查是否已经装载并创建了该Servlet的实例对象。如果是，则直接执行第④步，否则，执行第②步。
②装载并创建该Servlet的一个实例对象。 
③调用Servlet实例对象的init()方法。
④创建一个用于封装HTTP请求消息的HttpServletRequest对象和一个代表HTTP响应消息的HttpServletResponse对象，然后调用Servlet的service()方法并将请求和响应对象作为参数传递进去。
⑤WEB应用程序被停止或重新启动之前，Servlet引擎将卸载Servlet，并在卸载之前调用Servlet的destroy()方法。 

每个servlet只会实例化一次，新的http请求调用的是第一次servlet的实例，不过封装http请求和相应的两个对象是每次都新建。

servlet和filter的关系：
初始化顺序：filter先初始化，servlet再初始化。
调用顺序：http请求过来的时候，先走filter，再走servlet。
filter通过chain.dofilter走其他的filter。一个filter同时也被chain.dofilter划分为两块，即请求前，请求响应后。chain.filter()同样表示放行，请求可以走到servlet。

转发forward是服务器行为，从http请求过来，到请求相应，还是一次请求。
重定向redriect是浏览器行为，从http请求过来，到请求响应；再重新发送http请求，在返回请求响应，是两次请求。过程是如下：
第一次http请求过来，服务器返回请求响应，并且status状态码是301/302，浏览器根据返回的状态码重新发送http请求到其他url，请求真正的资源。
forward和redriect区别：
forward:转发页面和转发到的页面可以共享request里面的数据. redirect:不能共享数据.
效率方面：forward:高. redirect:低.