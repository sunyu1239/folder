程序依赖于程序代码的共享库，以便它们可以发出系统调用将输出发送到设备或打开文件等（共享库存在于许多方面，而不只局限于系统调用）。
没有共享库，每次程序员开发一个新的程序，每个程序员都需要从头开始重写这些基本的系统操作。
当编译程序时，程序员将他的代码链接到这些库。
如果链接是静态的，编译后的共享库对象代码就添加到程序执行文件中；
如果是动态的，编译后的共享库对象代码只在运行时需要它时由程序员加载。
动态可执行文件依赖于正确的共享库或共享对象来进行操作。
rpm依赖性尝试在安装时强制实施动态可执行文件的共享对象需求，以便在以后当程序运行时不会有与动态链接过程有关的任何问题。
注意：还有一种类型的依赖性，它基于显式的条目，rpm通过程序员将该依赖性强加到rpm配置文件中，
但目前我们不关心这种类型的依赖性，这种依赖性比较容易解决。这里将重点放在rpm强制实施的更加复杂的共享对象依赖性。